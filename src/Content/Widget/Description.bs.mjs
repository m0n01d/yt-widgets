// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Schema from "../../Data/Schema.bs.mjs";
import * as ReactDom from "react-dom";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as JsxRuntime from "react/jsx-runtime";

var name = Schema.DescriptionSnippet.tableName;

function Description$Snippets(props) {
  var match = React.useState(function () {
        return [];
      });
  var setState = match[1];
  React.useEffect((function () {
          var onMessageListener = function (param) {
            var tag = param.tag;
            var payload = param.payload;
            if (tag === "init") {
              setState(function (param) {
                    return payload;
                  });
            } else {
              throw {
                    RE_EXN_ID: "Match_failure",
                    _1: [
                      "Description.res",
                      12,
                      8
                    ],
                    Error: new Error()
                  };
            }
            console.log("app chrome port inbound", tag);
          };
          var port = chrome.runtime.connect({
                name: name
              });
          port.onMessage.addListener(onMessageListener);
        }), []);
  var view = JsxRuntime.jsx("pre", {
        children: Belt_Option.getWithDefault(JSON.stringify(match[0]), "nopoe")
      });
  var el = document.querySelector("body");
  if (el == null) {
    return null;
  } else {
    return ReactDom.createPortal(view, el);
  }
}

var Snippets = {
  name: name,
  make: Description$Snippets
};

function Description(props) {
  return JsxRuntime.jsx(Description$Snippets, {});
}

var make = Description;

export {
  Snippets ,
  make ,
}
/* react Not a pure module */
