// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as ReactDom from "react-dom";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var observerConfig = {
  attributes: false,
  childList: true,
  subtree: true
};

var ytSelector = "ytcp-video-title";

var viewOverLimit = React.createElement("div", {
      id: "TitleChecker.view",
      style: {
        color: "#dc3545",
        fontSize: "12px",
        padding: "0.2rem 1rem",
        textAlign: "right"
      }
    }, "Your title is a little long there, pal...");

function make(props) {
  var maybeVideoTitleEl = document.querySelector(ytSelector);
  var maybeVideoTitleEl$1 = (maybeVideoTitleEl == null) ? undefined : Caml_option.some(maybeVideoTitleEl);
  var maybeVideoTitleInput = Belt_Option.flatMap(maybeVideoTitleEl$1, (function (el) {
          return Caml_option.nullable_to_opt(el.querySelector("ytcp-social-suggestion-input"));
        }));
  console.log(maybeVideoTitleEl$1, maybeVideoTitleInput);
  var initialState = Belt_Option.mapWithDefault(maybeVideoTitleInput, /* UnderLimit */1, (function (videoTitleEl) {
          if (videoTitleEl.innerText.length > 60) {
            return /* OverLimit */0;
          } else {
            return /* UnderLimit */1;
          }
        }));
  var match = React.useState(function () {
        return initialState;
      });
  var setState = match[1];
  var view = match[0] ? React.createElement(React.Fragment, undefined) : viewOverLimit;
  var watcher = function (mutationList, observer) {
    var textboxLen = Belt_Option.mapWithDefault(Belt_Option.map(Belt_Option.map(Belt_Array.get(mutationList, 0), (function (mutation) {
                    return mutation.target;
                  })), (function (el) {
                return el.innerText;
              })), 0, (function (text) {
            return text.length;
          }));
    if (textboxLen > 60) {
      return Curry._1(setState, (function (param) {
                    return /* OverLimit */0;
                  }));
    } else {
      return Curry._1(setState, (function (param) {
                    return /* UnderLimit */1;
                  }));
    }
  };
  var observer = new MutationObserver(watcher);
  if (!(maybeVideoTitleEl == null) && maybeVideoTitleInput !== undefined) {
    observer.observe(Caml_option.valFromOption(maybeVideoTitleInput), observerConfig);
    return ReactDom.createPortal(view, maybeVideoTitleEl);
  } else {
    return React.createElement(React.Fragment, undefined);
  }
}

export {
  observerConfig ,
  ytSelector ,
  viewOverLimit ,
  make ,
}
/* viewOverLimit Not a pure module */
