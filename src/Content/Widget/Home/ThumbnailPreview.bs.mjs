// Generated by ReScript, PLEASE EDIT WITH CARE

import * as ReactQuery from "@rescriptbr/react-query/src/ReactQuery.bs.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as Webapi__Dom__Element from "rescript-webapi/src/Webapi/Dom/Webapi__Dom__Element.bs.mjs";
import * as ReactQuery$1 from "@tanstack/react-query";

function query(x) {
  console.log("query", x);
  return Promise.all(Array.prototype.slice.call(document.querySelectorAll("ytd-browse #contents ytd-rich-item-renderer")).map(function (el) {
                    return Webapi__Dom__Element.ofNode(el);
                  }).map(function (maybeEl) {
                  console.log("maybe its here", maybeEl);
                  if (maybeEl !== undefined) {
                    return Promise.resolve(Caml_option.valFromOption(maybeEl));
                  } else {
                    return Promise.reject(new Error("Not Found"));
                  }
                }));
}

function ThumbnailPreview$ThumbnailPreview(props) {
  console.log("init thumbnail preview");
  var index = Math.floor(Math.random() * 5.0) | 0;
  var queryResult = ReactQuery$1.useQuery({
        queryKey: ["Home.Thumbnail.Preview"],
        queryFn: query,
        retry: Caml_option.some(ReactQuery.retry({
                  NAME: "number",
                  VAL: 5
                })),
        retryDelay: Caml_option.some(ReactQuery.retryDelay({
                  NAME: "number",
                  VAL: 1000
                })),
        staleTime: Caml_option.some(ReactQuery.time({
                  NAME: "number",
                  VAL: 1
                })),
        refetchOnMount: Caml_option.some(ReactQuery.refetchOnMount({
                  NAME: "bool",
                  VAL: true
                })),
        refetchOnWindowFocus: Caml_option.some(ReactQuery.refetchOnWindowFocus({
                  NAME: "bool",
                  VAL: false
                }))
      });
  console.log("prviewe el", queryResult);
  if (queryResult.isError) {
    console.log(queryResult.error);
  } else {
    var videoElements = queryResult.data;
    if (videoElements !== undefined) {
      var videoElement = videoElements[index];
      var thumb = Core__Option.getExn(Caml_option.nullable_to_opt(videoElement.querySelector("ytd-thumbnail img")));
      var title = Core__Option.getExn(Caml_option.nullable_to_opt(videoElement.querySelector("#video-title-link yt-formatted-string")));
      thumb.setAttribute("src", "https://placecats.com/300/200");
      title.innerText = "Hello World";
      console.log([
            thumb,
            title
          ]);
    } else {
      console.log("no data");
    }
  }
  return null;
}

var ThumbnailPreview = {
  make: ThumbnailPreview$ThumbnailPreview
};

var client = new ReactQuery$1.QueryClient();

function ThumbnailPreview$1(props) {
  return JsxRuntime.jsx(ReactQuery$1.QueryClientProvider, {
              client: client,
              children: JsxRuntime.jsx(ThumbnailPreview$ThumbnailPreview, {})
            });
}

var make = ThumbnailPreview$1;

export {
  query ,
  ThumbnailPreview ,
  client ,
  make ,
}
/* client Not a pure module */
