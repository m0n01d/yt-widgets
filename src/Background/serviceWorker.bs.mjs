// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Table from "../Data/Table.bs.mjs";
import Dexie from "dexie";
import * as Schema from "../Data/Schema.bs.mjs";
import * as Belt_Id from "rescript/lib/es6/belt_Id.js";
import * as Belt_Map from "rescript/lib/es6/belt_Map.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Js_promise2 from "rescript/lib/es6/js_promise2.js";
import * as Version$Dexie from "@dusty-phillips/rescript-dexie/src/Version.bs.mjs";

var dexie = new Dexie("hello dexie 1");

var schema = [Schema.DescriptionTemplate.schema];

Version$Dexie.stores(dexie.version(1), schema);

dexie.open();

var p = Curry._2(Table.DescriptionTemplate.put, dexie, {
      body: "test",
      date: new Date(),
      id: 41,
      name: "fake"
    });

var cmp = Caml_obj.compare;

var IntCmp = Belt_Id.MakeComparable({
      cmp: cmp
    });

var listeners = Belt_Map.make(IntCmp);

chrome.runtime.onConnect.addListener(function (port) {
      var match = port.name;
      if (match === "yt-widgets-content") {
        Belt_Map.set(listeners, port.name, port);
        port.onMessage.addListener(function (portMsg) {
              if (portMsg.tag === "ready") {
                Js_promise2.then(Curry._1(Table.DescriptionTemplate.toArray, dexie), (function (descriptionTemplates) {
                        console.log("from db", descriptionTemplates);
                        var message = {
                          payload: descriptionTemplates,
                          tag: "testing 123"
                        };
                        port.postMessage(message);
                        return Promise.resolve(undefined);
                      }));
              } else {
                throw {
                      RE_EXN_ID: "Match_failure",
                      _1: [
                        "ServiceWorker.res",
                        28,
                        8
                      ],
                      Error: new Error()
                    };
              }
              console.log("msg");
              console.log(portMsg);
            });
      } else {
        throw {
              RE_EXN_ID: "Match_failure",
              _1: [
                "ServiceWorker.res",
                24,
                2
              ],
              Error: new Error()
            };
      }
      console.log("connected", port);
    });

export {
  dexie ,
  schema ,
  p ,
  IntCmp ,
  listeners ,
}
/* dexie Not a pure module */
